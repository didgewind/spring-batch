<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch.xsd">

	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<!-- <step id="decompress" next="readWriteProducts"> <tasklet ref="decompressTasklet" 
			/> </step> -->
		<step id="readWriteProducts">
			<tasklet>
				<chunk reader="productsXmlReader" writer="productsJdbcWriter" commit-interval="3"
					skip-limit="5">
					<skippable-exception-classes>
						<include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>

	<bean id="decompressTasklet"
		class="profe.springbatch.simplecatalogbatch.batch.DecompressTasklet"
		scope="step">
		<property name="inputResource" value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile" value="#{jobParameters['targetFile']}" />
	</bean>

	<bean id="productsXmlReader"
			class="org.springframework.batch.item.xml.StaxEventItemReader" scope="step">
		<property name="resource" value="file:#{ jobParameters['targetDirectory'] + jobParameters['xmlProductsFile'] }"/>
		<property name="fragmentRootElementName" value="product"/>
		<property name="unmarshaller" ref="productMarshaller"/>
	</bean>

	<bean id="productMarshaller"
			class="org.springframework.oxm.castor.CastorMarshaller" scope="step">
		<property name="mappingLocation"
				value="file:#{ jobParameters['targetDirectory'] + jobParameters['productsMappingFile'] }"/>
	</bean>
	
	<bean id="productsDelLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="names" value="PRODUCT_ID,NAME,DESCRIPTION,PRICE" />
	</bean>

	<bean id="productFieldSetMapper"
		class="profe.springbatch.simplecatalogbatch.batch.ProductFieldSetMapper" />

	<bean id="multilineRecordSepPolicy"
		class="profe.springbatch.simplecatalogbatch.batch.ProdTwoLinesSeparatorPolicy" />

	<bean id="productsJdbcWriter"
		class="profe.springbatch.simplecatalogbatch.batch.ProductJdbcItemWriter" />

</beans>
