<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch.xsd">

	<job id="importProductsWithDiscount" xmlns="http://www.springframework.org/schema/batch">
		<step id="readWriteProducts" next="muestraProductosFromBd">
			<tasklet>
				<chunk reader="productsFileReader"
						writer="productsJdbcWriter"
						commit-interval="3" skip-limit="5">
					<skippable-exception-classes>
						<include class="org.springframework.batch.item.file.FlatFileParseException" />
					</skippable-exception-classes>
				</chunk>
				<listeners>
					<listener>
						<bean class="profe.springbatch.simplecatalogbatch.batch.ProductsSkipListener" 
							xmlns="http://www.springframework.org/schema/beans"/>
					</listener>
				</listeners>
			</tasklet>			
		</step>
		<step id="muestraProductosFromBd">
			<tasklet>
				<chunk reader="productsJdbcReader" writer="productsConsoleWriter" commit-interval="3" />
			</tasklet>
		</step>
	</job>

	<bean id="productsFileReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['targetDirectory'] + jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer" ref="productsDelLineTokenizer" />
				<property name="fieldSetMapper" ref="productFieldSetMapper" />
			</bean>
		</property>
	</bean>
	
	<bean id="productsJdbcReader"
			class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource"/>
		<property name="sql" value="select id, name, description, price from products"/>
		<property name="rowMapper" ref="productRowMapper"/>
	</bean>

	<bean id="productRowMapper"
		class="profe.springbatch.simplecatalogbatch.batch.ProductRowMapper"/>

	<bean id="productsDelLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="names" value="PRODUCT_ID,NAME,DESCRIPTION,PRICE" />
	</bean>

	<bean id="productFieldSetMapper"
		class="profe.springbatch.simplecatalogbatch.batch.ProductFieldSetMapper" />

	<bean id="productsConsoleWriter"
		class="profe.springbatch.simplecatalogbatch.batch.ProductConsoleItemWriter"
		scope="step" />
	
	<bean id="productsJdbcWriter"
		class="profe.springbatch.simplecatalogbatch.batch.ProductJdbcItemWriter" />

</beans>
